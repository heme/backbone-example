{"name":"Backbone.js Overview","tagline":"Overview of Basic Backbone.js Concepts","body":"# Backbone.js Concepts\r\n\r\nBackbone.js provides structure to web applications in 4 ways...\r\n\r\n1. Models & Collections (Data Structures)\r\n2. Event System (Subscribe & Trigger)\r\n3. Views (Controls Data & Templates)\r\n4. Routers (Application State in URL)\r\n\r\n\r\n\r\n\r\n### 1. Models & Collections\r\n* Models contain the interactive data representing an object/resource. \r\n* Collections are ordered sets of models.\r\n\r\n###### Create a Model:\r\n````JavaScript\r\n\r\n    // Model\r\n    var Employee = Backbone.Model.extend({\r\n      urlRoot: '/employee/'\r\n    });\r\n\r\n    var employee = new Employee();\r\n````\r\n\r\n###### Create a Collection:\r\n````JavaScript\r\n    // Collection\r\n    var Employees = Backbone.Collection.extend({\r\n      url: '/employee',\r\n      model: Employee\r\n    });\r\n\r\n    var employees = new Employees();\r\n````\r\n\r\n\r\n### 2. Event System\r\n*  The Backbone.js event module gives any object the ability to bind and trigger custom named events.\r\n\r\n###### Listen to a Model:\r\n````JavaScript\r\n    // create an instance of the employee model\r\n    var newHire = new Employee();\r\n\r\n    // create a generic JavaScript object and add a function to it\r\n    var im_listening = {};\r\n    im_listening.processData = function() {\r\n        alert('The new employee's name is: ' + newHire.get('FirstName') + newHire.get('LastName'))\r\n    };\r\n\r\n    // extend the generic JavaScript object with Backbone.js's event object\r\n    _.extend(im_listening, Backbone.Events);\r\n\r\n    // tell our object to listen to the model's sync event\r\n    im_listening.listenTo(newHire, 'sync', im_listening.processData);\r\n\r\n    // fetch data for that model from API, will trigger the \"sync\" event\r\n    newHire.set('id',136);\r\n    newHire.fetch();\r\n````\r\n\r\n\r\n\r\n\r\n### 3. Views\r\n* Backbone.js views control the interaction between the UI & Models/Collections. \r\n\r\n###### Create a View:\r\n````JavaScript\r\n    // View - Detail\r\n    var EmployeeDetailView = Backbone.View.extend({\r\n        events: {\r\n            'click #btnLoad': 'loadEmployee'\r\n        },\r\n        el: '#employeeViewContainer',\r\n        initialize: function() {\r\n            this.model = new Employee();\r\n            this.listenTo(this.model, 'sync', this.render);\r\n        },\r\n        loadEmployee: function() {\r\n            var id = this.$('#employeeID').val();\r\n            this.model.set('id', id);\r\n            this.model.fetch();\r\n        },\r\n        render: function () {\r\n            var name = this.model.get('FirstName') + ' ' \r\n                + this.model.get('LastName');\r\n            this.$('#employeeName').html(name);\r\n        }\r\n    });\r\n\r\n    var employeeDetailView = new EmployeeDetailView();\r\n````\r\n<fieldset id=\"employeeViewContainer\" style=\"background-color: #f8f8f8; border: 1px solid #999; border-radius:3px;\">\r\n    <legend>#employeeViewContainer</legend>\r\n    <label for=\"employeeID\">ID: </label><input type=\"text\" size=\"5\" id=\"employeeID\" />\r\n    <button id=\"btnLoad\">Load</button>\r\n    <h2 id=\"employeeName\" style=\"float:right;width:66%;margin-top:0;background-color:#fff;text-indent:20px;\">&nbsp;</h2>\r\n</fieldset>\r\n\r\n### 4. Routers\r\n* Backbone.js Routers provide linkable, bookmarkable, shareable URLs for important locations within the app.\r\n\r\n````JavaScript\r\n    // Application Router\r\n    var Router = Backbone.Router.extend({\r\n        routes: {\r\n            // 'URN in address bar' : 'function on this object to call when URL matches'\r\n            '': \"index\", // http://application.com/\r\n            'employee/:id': 'employee' // http://application.com/employee/6\r\n        },\r\n        index: function() {\r\n            var employeeListView = new EmployeeListView();\r\n        },\r\n        employee: function(id) {\r\n            var employeeDetailView = new EmployeeDetailView({'id':id});\r\n        }\r\n    });\r\n````","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}